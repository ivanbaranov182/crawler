!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectToFormData=t.addElement=t.formatDate=t.generateUniqueString=t.msToSec=void 0;var n=r(13);t.msToSec=function(e){return Math.round(e/1e3)},t.generateUniqueString=function(){return n.v4()},t.formatDate=function(e){var t=new Date(e);return(t.getFullYear()+"-"+(t.getMonth()+1)+"-"+t.getDay()+" "+t.getHours()+":"+t.getMinutes()+":"+t.getSeconds()).replace(/(^|\D)(\d)(?!\d)/g,"$10$2")},t.addElement=function(e,t,r){void 0===r&&(r=!1);var n=document.createElement("div");return n.classList.add(t),r?null==e||e.prepend(n):null==e||e.appendChild(n),n},t.objectToFormData=function(e){return Object.keys(e).reduce((function(t,r){return t.append(r,e[r]),t}),new FormData)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6);Object.defineProperty(t,"Parser",{enumerable:!0,get:function(){return n.Parser}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(3)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(4);console.log("without DOMContentLoaded"),new n.Crawler},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(5);Object.defineProperty(t,"Crawler",{enumerable:!0,get:function(){return n.Crawler}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Crawler=void 0;var n=r(1),o=r(7),i=r(9),a=r(11),u=r(0),c=function(){function e(){this.parser=this.getParser(),this.article=this.parser.result,this.articleEl=this.parser.articleElement,this.userId=i.User.getId(),this.sender=new a.Sender,this.read=0,this.articleStartEl=u.addElement(this.articleEl,"js-observer-start",!0),this.articleEndEl=u.addElement(this.articleEl,"js-observer-end"),this.startReadTime=(new Date).getTime(),this.articleEl&&this.initEvents()}return Object.defineProperty(e.prototype,"statistic",{get:function(){return{user:this.userId,domain:this.article.domain,slug:this.article.slug,time:u.msToSec((new Date).getTime()-this.startReadTime),read:this.read}},enumerable:!1,configurable:!0}),e.prototype.getParser=function(){var e=document.querySelector('[itemtype="http://schema.org/NewsArticle"]');return e||console.log("Микроразметка не найдена"),e?new o.PropParser:new n.Parser},e.prototype.sendArticleInfo=function(){this.sender.send(this.article,"/articles",!1)},e.prototype.articleRead=function(){this.read=1,this.sender.send(this.statistic,"/article-statistics",!0)},e.prototype.articleReject=function(){this.sender.send(this.statistic,"/article-statistics",!0)},e.prototype.setObserver=function(){var e=this,t=new IntersectionObserver((function(t){var r=t[0];r.isIntersecting&&(r.target!==e.articleStartEl||e.startReadTime||(e.startReadTime=(new Date).getTime()),r.target!==e.articleEndEl||e.read||e.articleRead())}),{threshold:1,rootMargin:"20px"});this.articleStartEl&&t.observe(this.articleStartEl),this.articleEndEl&&t.observe(this.articleEndEl)},e.prototype.pageLeave=function(){var e=this;window.addEventListener("beforeunload",(function(){return!e.read&&e.articleReject()}))},e.prototype.initEvents=function(){this.sendArticleInfo(),this.setObserver(),this.pageLeave()},e}();t.Crawler=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=void 0;var n=function(){function e(){this.removedTags=["script","iframe"],this.rootElement=document}return Object.defineProperty(e.prototype,"url",{get:function(){return window.location.href},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"urlObj",{get:function(){return new URL(this.url)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"element",{get:function(){return null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"domain",{get:function(){return this.urlObj.hostname},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"slug",{get:function(){return this.urlObj.pathname},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"categories",{get:function(){return[]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"image",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"createAt",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"updateAt",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"title",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"description",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textHtml",{get:function(){return""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"content_images",{get:function(){return[]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"articleElement",{get:function(){return this.element},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"result",{get:function(){return{domain:this.domain,slug:this.slug,categories:this.categories,image:this.image,published_at:this.createAt,edited_at:this.updateAt,title:this.title,description:this.description,text_html:this.textHtml,content_images:this.content_images}},enumerable:!1,configurable:!0}),e}();t.Parser=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(8);Object.defineProperty(t,"PropParser",{enumerable:!0,get:function(){return n.PropParser}})},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.PropParser=void 0;var i=r(1),a=r(0),u=function(e){function t(){var t=e.call(this)||this;return t.articleQuery='[itemtype="http://schema.org/NewsArticle"]',t.articleBodyEl=t.element&&t.getElement('[itemprop="articleBody"]',t.element),t}return o(t,e),Object.defineProperty(t.prototype,"element",{get:function(){return document.querySelector(this.articleQuery)},enumerable:!1,configurable:!0}),t.prototype.getElementParam=function(e,t){var r=this.element&&this.getElement(e,this.element);return r?t?this.getElementAttributeValue(r,t):this.getElementTextValue(r):""},t.prototype.getElement=function(e,t){return(t||this.rootElement).querySelector(e)},t.prototype.getElementAttributeValue=function(e,t){var r;return null!==(r=e.getAttribute(t))&&void 0!==r?r:""},t.prototype.getElementTextValue=function(e){var t;return null!==(t=e.textContent)&&void 0!==t?t:""},t.prototype.removeHtml=function(e){return this.removedTags.forEach((function(t){e.childNodes.forEach((function(r){return r.nodeName.toLowerCase()===t&&e.removeChild(r)}))})),e},Object.defineProperty(t.prototype,"url",{get:function(){var e;return null!==(e=this.getElementParam('[itemprop="mainEntityOfPage"]',"itemid"))&&void 0!==e?e:window.location.href},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"categories",{get:function(){return[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"createAt",{get:function(){var e=this.getElementParam('[itemprop="datePublished"]',"content");return e?a.formatDate(e):""},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"updateAt",{get:function(){var e=this.getElementParam('[itemprop="dateModified"]',"content");return e?a.formatDate(e):""},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this.getElementParam('[itemprop="headline"]',null)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"image",{get:function(){return this.getElementParam('[itemprop="image"] img',"src")},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"description",{get:function(){return this.getElementParam('[itemprop="description"]',null)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"textHtml",{get:function(){if(!this.articleBodyEl)return"";var e=this.articleBodyEl.cloneNode(!0),t=this.removeHtml(e);return t.textContent?t.textContent.trim():""},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"content_images",{get:function(){var e=this;if(!this.articleBodyEl)return[];var t=this.articleBodyEl.querySelectorAll("img"),r=[];return t.forEach((function(t){r.push(e.getElementAttributeValue(t,"src"))})),r},enumerable:!1,configurable:!0}),t}(i.Parser);t.PropParser=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(10);Object.defineProperty(t,"User",{enumerable:!0,get:function(){return n.User}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.User=void 0;var n=r(0),o=function(){function e(){}return e.getId=function(){var e;return null!==(e=this.getUser())&&void 0!==e?e:this.setUser()},e.getUser=function(){return localStorage.getItem(this.storageName)},e.setUser=function(){var e=n.generateUniqueString();return localStorage.setItem(this.storageName,e),e},e.storageName="crawler-user",e}();t.User=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(12);Object.defineProperty(t,"Sender",{enumerable:!0,get:function(){return n.Sender}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Sender=void 0;var n=r(0),o=function(){function e(){this.canBeacon=!!navigator.sendBeacon}return e.prototype.getApiUrl=function(e){return"http://80.249.150.36/api/v1"+e},e.prototype.send=function(e,t,r){if(void 0===r&&(r=!1),this.canBeacon&&r)return this.sendBeacon(e,t);this.fetch(e,t)},e.prototype.sendBeacon=function(e,t){return navigator.sendBeacon(this.getApiUrl(t),n.objectToFormData(e))},e.prototype.fetch=function(e,t){var r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};fetch(this.getApiUrl(t),r)},e}();t.Sender=o},function(e,t,r){"use strict";var n;r.r(t),r.d(t,"v1",(function(){return m})),r.d(t,"v3",(function(){return _})),r.d(t,"v4",(function(){return A})),r.d(t,"v5",(function(){return M})),r.d(t,"NIL",(function(){return I})),r.d(t,"version",(function(){return C})),r.d(t,"validate",(function(){return u})),r.d(t,"stringify",(function(){return p})),r.d(t,"parse",(function(){return h}));var o=new Uint8Array(16);function i(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)}var a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var u=function(e){return"string"==typeof e&&a.test(e)},c=[],s=0;s<256;++s)c.push((s+256).toString(16).substr(1));var l,f,p=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase();if(!u(r))throw TypeError("Stringified UUID is invalid");return r},d=0,g=0;var m=function(e,t,r){var n=t&&r||0,o=t||new Array(16),a=(e=e||{}).node||l,u=void 0!==e.clockseq?e.clockseq:f;if(null==a||null==u){var c=e.random||(e.rng||i)();null==a&&(a=l=[1|c[0],c[1],c[2],c[3],c[4],c[5]]),null==u&&(u=f=16383&(c[6]<<8|c[7]))}var s=void 0!==e.msecs?e.msecs:Date.now(),m=void 0!==e.nsecs?e.nsecs:g+1,h=s-d+(m-g)/1e4;if(h<0&&void 0===e.clockseq&&(u=u+1&16383),(h<0||s>d)&&void 0===e.nsecs&&(m=0),m>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");d=s,g=m,f=u;var y=(1e4*(268435455&(s+=122192928e5))+m)%4294967296;o[n++]=y>>>24&255,o[n++]=y>>>16&255,o[n++]=y>>>8&255,o[n++]=255&y;var b=s/4294967296*1e4&268435455;o[n++]=b>>>8&255,o[n++]=255&b,o[n++]=b>>>24&15|16,o[n++]=b>>>16&255,o[n++]=u>>>8|128,o[n++]=255&u;for(var v=0;v<6;++v)o[n+v]=a[v];return t||p(o)};var h=function(e){if(!u(e))throw TypeError("Invalid UUID");var t,r=new Uint8Array(16);return r[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r};var y=function(e,t,r){function n(e,n,o,i){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t}(e)),"string"==typeof n&&(n=h(n)),16!==n.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var a=new Uint8Array(16+e.length);if(a.set(n),a.set(e,n.length),(a=r(a))[6]=15&a[6]|t,a[8]=63&a[8]|128,o){i=i||0;for(var u=0;u<16;++u)o[i+u]=a[u];return o}return p(a)}try{n.name=e}catch(e){}return n.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",n.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",n};function b(e){return 14+(e+64>>>9<<4)+1}function v(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function P(e,t,r,n,o,i){return v((a=v(v(t,e),v(n,i)))<<(u=o)|a>>>32-u,r);var a,u}function j(e,t,r,n,o,i,a){return P(t&r|~t&n,e,t,o,i,a)}function O(e,t,r,n,o,i,a){return P(t&n|r&~n,e,t,o,i,a)}function E(e,t,r,n,o,i,a){return P(t^r^n,e,t,o,i,a)}function w(e,t,r,n,o,i,a){return P(r^(t|~n),e,t,o,i,a)}var _=y("v3",48,(function(e){if("string"==typeof e){var t=unescape(encodeURIComponent(e));e=new Uint8Array(t.length);for(var r=0;r<t.length;++r)e[r]=t.charCodeAt(r)}return function(e){for(var t=[],r=32*e.length,n=0;n<r;n+=8){var o=e[n>>5]>>>n%32&255,i=parseInt("0123456789abcdef".charAt(o>>>4&15)+"0123456789abcdef".charAt(15&o),16);t.push(i)}return t}(function(e,t){e[t>>5]|=128<<t%32,e[b(t)-1]=t;for(var r=1732584193,n=-271733879,o=-1732584194,i=271733878,a=0;a<e.length;a+=16){var u=r,c=n,s=o,l=i;r=j(r,n,o,i,e[a],7,-680876936),i=j(i,r,n,o,e[a+1],12,-389564586),o=j(o,i,r,n,e[a+2],17,606105819),n=j(n,o,i,r,e[a+3],22,-1044525330),r=j(r,n,o,i,e[a+4],7,-176418897),i=j(i,r,n,o,e[a+5],12,1200080426),o=j(o,i,r,n,e[a+6],17,-1473231341),n=j(n,o,i,r,e[a+7],22,-45705983),r=j(r,n,o,i,e[a+8],7,1770035416),i=j(i,r,n,o,e[a+9],12,-1958414417),o=j(o,i,r,n,e[a+10],17,-42063),n=j(n,o,i,r,e[a+11],22,-1990404162),r=j(r,n,o,i,e[a+12],7,1804603682),i=j(i,r,n,o,e[a+13],12,-40341101),o=j(o,i,r,n,e[a+14],17,-1502002290),n=j(n,o,i,r,e[a+15],22,1236535329),r=O(r,n,o,i,e[a+1],5,-165796510),i=O(i,r,n,o,e[a+6],9,-1069501632),o=O(o,i,r,n,e[a+11],14,643717713),n=O(n,o,i,r,e[a],20,-373897302),r=O(r,n,o,i,e[a+5],5,-701558691),i=O(i,r,n,o,e[a+10],9,38016083),o=O(o,i,r,n,e[a+15],14,-660478335),n=O(n,o,i,r,e[a+4],20,-405537848),r=O(r,n,o,i,e[a+9],5,568446438),i=O(i,r,n,o,e[a+14],9,-1019803690),o=O(o,i,r,n,e[a+3],14,-187363961),n=O(n,o,i,r,e[a+8],20,1163531501),r=O(r,n,o,i,e[a+13],5,-1444681467),i=O(i,r,n,o,e[a+2],9,-51403784),o=O(o,i,r,n,e[a+7],14,1735328473),n=O(n,o,i,r,e[a+12],20,-1926607734),r=E(r,n,o,i,e[a+5],4,-378558),i=E(i,r,n,o,e[a+8],11,-2022574463),o=E(o,i,r,n,e[a+11],16,1839030562),n=E(n,o,i,r,e[a+14],23,-35309556),r=E(r,n,o,i,e[a+1],4,-1530992060),i=E(i,r,n,o,e[a+4],11,1272893353),o=E(o,i,r,n,e[a+7],16,-155497632),n=E(n,o,i,r,e[a+10],23,-1094730640),r=E(r,n,o,i,e[a+13],4,681279174),i=E(i,r,n,o,e[a],11,-358537222),o=E(o,i,r,n,e[a+3],16,-722521979),n=E(n,o,i,r,e[a+6],23,76029189),r=E(r,n,o,i,e[a+9],4,-640364487),i=E(i,r,n,o,e[a+12],11,-421815835),o=E(o,i,r,n,e[a+15],16,530742520),n=E(n,o,i,r,e[a+2],23,-995338651),r=w(r,n,o,i,e[a],6,-198630844),i=w(i,r,n,o,e[a+7],10,1126891415),o=w(o,i,r,n,e[a+14],15,-1416354905),n=w(n,o,i,r,e[a+5],21,-57434055),r=w(r,n,o,i,e[a+12],6,1700485571),i=w(i,r,n,o,e[a+3],10,-1894986606),o=w(o,i,r,n,e[a+10],15,-1051523),n=w(n,o,i,r,e[a+1],21,-2054922799),r=w(r,n,o,i,e[a+8],6,1873313359),i=w(i,r,n,o,e[a+15],10,-30611744),o=w(o,i,r,n,e[a+6],15,-1560198380),n=w(n,o,i,r,e[a+13],21,1309151649),r=w(r,n,o,i,e[a+4],6,-145523070),i=w(i,r,n,o,e[a+11],10,-1120210379),o=w(o,i,r,n,e[a+2],15,718787259),n=w(n,o,i,r,e[a+9],21,-343485551),r=v(r,u),n=v(n,c),o=v(o,s),i=v(i,l)}return[r,n,o,i]}(function(e){if(0===e.length)return[];for(var t=8*e.length,r=new Uint32Array(b(t)),n=0;n<t;n+=8)r[n>>5]|=(255&e[n/8])<<n%32;return r}(e),8*e.length))}));var A=function(e,t,r){var n=(e=e||{}).random||(e.rng||i)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(var o=0;o<16;++o)t[r+o]=n[o];return t}return p(n)};function S(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}function U(e,t){return e<<t|e>>>32-t}var M=y("v5",80,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],r=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var n=unescape(encodeURIComponent(e));e=[];for(var o=0;o<n.length;++o)e.push(n.charCodeAt(o))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var i=e.length/4+2,a=Math.ceil(i/16),u=new Array(a),c=0;c<a;++c){for(var s=new Uint32Array(16),l=0;l<16;++l)s[l]=e[64*c+4*l]<<24|e[64*c+4*l+1]<<16|e[64*c+4*l+2]<<8|e[64*c+4*l+3];u[c]=s}u[a-1][14]=8*(e.length-1)/Math.pow(2,32),u[a-1][14]=Math.floor(u[a-1][14]),u[a-1][15]=8*(e.length-1)&4294967295;for(var f=0;f<a;++f){for(var p=new Uint32Array(80),d=0;d<16;++d)p[d]=u[f][d];for(var g=16;g<80;++g)p[g]=U(p[g-3]^p[g-8]^p[g-14]^p[g-16],1);for(var m=r[0],h=r[1],y=r[2],b=r[3],v=r[4],P=0;P<80;++P){var j=Math.floor(P/20),O=U(m,5)+S(j,h,y,b)+v+t[j]+p[P]>>>0;v=b,b=y,y=U(h,30)>>>0,h=m,m=O}r[0]=r[0]+m>>>0,r[1]=r[1]+h>>>0,r[2]=r[2]+y>>>0,r[3]=r[3]+b>>>0,r[4]=r[4]+v>>>0}return[r[0]>>24&255,r[0]>>16&255,r[0]>>8&255,255&r[0],r[1]>>24&255,r[1]>>16&255,r[1]>>8&255,255&r[1],r[2]>>24&255,r[2]>>16&255,r[2]>>8&255,255&r[2],r[3]>>24&255,r[3]>>16&255,r[3]>>8&255,255&r[3],r[4]>>24&255,r[4]>>16&255,r[4]>>8&255,255&r[4]]})),I="00000000-0000-0000-0000-000000000000";var C=function(e){if(!u(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,